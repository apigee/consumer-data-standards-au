<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules/>
    <Flows>
        <Flow name="Get OIDC Configuration">
            <Description/>
            <Request/>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>JS-ReplaceHTPrivateIPAddrWithHostname</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/.well-known/openid-configuration") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Token Introspection">
            <Description>Get Token Info</Description>
            <Request>
                <Step>
                    <Condition>(request.formparam.token_type_hint !="") and (request.formparam.token_type_hint !="refresh_token")</Condition>
                    <FaultRules/>
                    <Name>RF-UnsupportedTokenType</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>EV-IsTokenActive</Name>
                </Step>
                <Step>
                    <Condition>(isTokenActive = true)</Condition>
                    <FaultRules/>
                    <Name>EV-TokenExpiryTime</Name>
                </Step>
                <Step>
                    <Condition>(isTokenActive = true)</Condition>
                    <FaultRules/>
                    <Name>AM-BuildIntrospectionResponseActiveToken</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/token/introspection") and (request.verb = "POST")</Condition>
        </Flow>
    </Flows>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>RF-InvocationFromProxyChainingOnly</Name>
                <Condition>virtualhost.ip != "127.0.0.1"</Condition>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <HTTPProxyConnection>
        <BasePath>/mock-oidc</BasePath>
        <Properties/>
        <VirtualHost>secure</VirtualHost>
        <!-- Important: Uncomment the following VirtualHost entry to enable mTLS with HoK verification.
             The secure-mtls virtual host must already be configured to support mTLS with propagateTLSInformation
             This proxy is proxy chained from another proxy that has some endpoints that do not require mTLS, so even in a production environment DO NOT remove the "secure" virtual host  -->
        <!-- <VirtualHost>secure-mtls</VirtualHost> -->
    </HTTPProxyConnection>
    <RouteRule name="sandbox">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>