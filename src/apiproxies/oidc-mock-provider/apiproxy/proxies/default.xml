<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description></Description>
    <FaultRules/>
    <Flows>
        <Flow name="Get OIDC Configuration">
            <Description></Description>
            <Request/>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>JS-ReplaceHTPrivateIPAddrWithHostname</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/.well-known/openid-configuration") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="Token Introspection">
            <Description>Get Token Info</Description>
            <Request>
                <Step>
                    <Condition>(request.formparam.token_type_hint !="") and (request.formparam.token_type_hint !="refresh_token")</Condition>
                    <FaultRules/>
                    <Name>RF-UnsupportedTokenType</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>EV-IsTokenActive</Name>
                </Step>
                <Step>
                    <Condition>(isTokenActive = true)</Condition>
                    <FaultRules/>
                    <Name>EV-TokenExpiryTime</Name>
                </Step>
                <Step>
                    <Condition>(isTokenActive = true)</Condition>
                    <FaultRules/>
                    <Name>AM-BuildIntrospectionResponseActiveToken</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/token/introspection") and (request.verb = "POST")</Condition>
        </Flow>
    </Flows>
    <PreFlow name="PreFlow">
        <Request/>
        <Response/>
    </PreFlow>
    <HTTPProxyConnection>
        <BasePath>/mock-oidc</BasePath>
        <Properties/>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="sandbox">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>
