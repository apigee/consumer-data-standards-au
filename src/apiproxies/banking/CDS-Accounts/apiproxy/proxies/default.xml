<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <DefaultFaultRule name="DefaultFaultRule">
        <Step>
            <Condition>message.status.code != "200"</Condition>
            <FaultRules/>
            <Name>AM-Add-CORS-Headers</Name>
        </Step>
        <AlwaysEnforce>true</AlwaysEnforce>
    </DefaultFaultRule>
    <Description></Description>
    <FaultRules>
        <FaultRule name="Invalid Scope">
            <Condition>(fault.name = "InsufficientScope")</Condition>
            <Step>
                <FaultRules/>
                <Name>RF-InvalidScope</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>AM-Add-CORS-Headers</Name>
            </Step>
        </FaultRule>
        <FaultRule name="Invalid Access Token">
            <Condition>(fault.name Matches "*access_token*") or (fault.name = "apiresource_doesnot_exist") or (fault.name = "InvalidAccessToken") or (fault.name = "InvalidAPICallAsNoApiProductMatchFound")</Condition>
            <Step>
                <FaultRules/>
                <Name>EV-getErrorDetail</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>RF-TokenNotVerified</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>AM-Add-CORS-Headers</Name>
            </Step>
        </FaultRule>
    </FaultRules>
    <Flows>
        <Flow name="listAccounts">
            <Description>Get Accounts</Description>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>OA-VerifyTokenForListAccounts</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>AM-SetCustomerId</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>FC-TrafficThresholds</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>FC-ValidateRequestParams</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>EV-GetAccountsFilterCriteria</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>AM-Set-Pagination-Settings</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>EV-GetAllAcountsForCustomer</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>JS-FilterAccountsListBasedOnRequestFilters</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>JS-RemoveProductDetails</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>FC-PaginateResponse</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="getAccountDetail">
            <Description>Get Accounts Detail</Description>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>OA-VerifyTokenForGetAccountDetails</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>AM-SetCustomerId</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>FC-TrafficThresholds</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>EV-productIdFromURL</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <FaultRules/>
                    <Name>EV-productDetailsForProductId</Name>
                </Step>
                <Step>
                    <FaultRules/>
                    <Name>JS-BuildProductDetailsResponse</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/{theAccountId}") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="unsupportedMethod">
            <Description>Method Not Allowed</Description>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>RF-UnsupportedMethod</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/")  or (proxy.pathsuffix MatchesPath "/{theAccountId}")</Condition>
        </Flow>
        <Flow name="notFound">
            <Description>Not Found</Description>
            <Request>
                <Step>
                    <FaultRules/>
                    <Name>RF-NotFound</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response>
            <Step>
                <FaultRules/>
                <Name>FC-AddResponseHeaders-Link-Meta</Name>
            </Step>
        </Response>
    </PostFlow>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <FaultRules/>
                <Name>FC-CheckRequestHeaders</Name>
            </Step>
            <Step>
                <FaultRules/>
                <Name>AM-MockFullListOfAccounts</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <HTTPProxyConnection>
        <BasePath>/cds-au/v1/banking/accounts</BasePath>
        <Properties/>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="noroute"/>
</ProxyEndpoint>
